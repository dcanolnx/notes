---
# tasks file
- name: Fail if not AlmaLinux
  fail:
    msg: "This role should only be run on AlmaLinux 8.7 {{ansible_distribution }} {{ansible_distribution_version}}"
  when: ansible_distribution != "AlmaLinux" or ansible_distribution_version != "8.7"

## CHECK IF ISCSID AND MULTIPATHD ARE RUNNING
- name: Make sure iscsid is running
  systemd:
    state: started
    name: iscsid

- name: Make sure multipathd is running
  systemd:
    state: started
    name: multipathd

- name: Get iscsi iqn
  shell: cat /etc/iscsi/initiatorname.iscsi | cut -d "=" -f2
  register: iqn

- name: Create host on PureStorage
  purefa_host:
    fa_url:           "{{ pure_hostname }}"
    api_token:        "{{ pure_api }}"
    host:             "{{ ansible_hostname }}"
    state:            "present"
    protocol:         "iscsi"
    iqn:
      - "{{iqn.stdout }}"
  register: info
  delegate_to: localhost

- name: Create hostgroup {{ pure_hostgroup }} if it does not exists on PureStorage
  purefa_hg:
    hostgroup:        "{{ pure_hostgroup }}"
    fa_url:           "{{ pure_hostname }}"
    api_token:        "{{ pure_api }}"
    state:            "present"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Add hosts to host group {{ pure_hostgroup }} on PureStorage
  purefa_hg:
    hostgroup:        "{{ pure_hostgroup }}"
    fa_url:           "{{ pure_hostname }}"
    api_token:        "{{ pure_api }}"
    host:             "{{ ansible_hostname }}"
    state:            "present"
  delegate_to: localhost

- name: Add repository helm PureStorage
  kubernetes.core.helm_repository:
    name: pure
    repo_url: "https://purestorage.github.io/pso-csi"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Creating namespace keos-pure-pso
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ keos_kubeconfig_path }}"
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: keos-pure-pso
        labels:
          name: keos-pure-pso
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Apply network policy for keos-pure-pso namespace
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ keos_kubeconfig_path }}"
    src: "{{role_path}}/files/network-policy.yaml"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Print named generated por pure-pso
  ansible.builtin.debug:
    msg: "{{ pso_name }}"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Generate random string for pure name
  set_fact:
    pso_name: "kubecicd{{ lookup('password', '/dev/null chars=ascii_lowercase length=4') }}"
  delegate_to: localhost
  when:
    - "ansible_hostname | regex_search('kubew3')"
    - pso_name == ""

- name: Print named generated by pure-pso
  ansible.builtin.debug:
    msg: "{{ pso_name }}"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Add repository pure-pso
  kubernetes.core.helm_repository:
    name: pure
    repo_url: "https://purestorage.github.io/pso-csi"
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Deploy pure-pso with helm
  kubernetes.core.helm:
    name: "pure"
    kubeconfig: "{{ keos_kubeconfig_path }}"
    chart_ref: pure/pure-pso
    release_namespace: "keos-pure-pso"
    values: "{{ lookup('template', 'values.yaml' ) | from_yaml }}"
    wait: true
    wait_timeout: "10m"
    state: present
  delegate_to: localhost
  when: "ansible_hostname | regex_search('kubew3')"

- name: Check {{ item }} Storage Class
  include_role:
    name: "{{role_path}}/../utils"
    tasks_from: check-storage-class.yml
    apply:
      delegate_to: localhost
  vars:
    storage_class_name: "{{ item }}"
    storage_class_namespace: "keos-pure-pso"
  loop:
    - pure-block
  when: "ansible_hostname | regex_search('kubew3')"
