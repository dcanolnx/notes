---
- name: Fail if missing variables
  fail: msg="Missing variables! pushprox_proxy_ip and/or pushprox_proxy_port! Aborting..."
  when: pushprox_proxy_ip is not defined or pushprox_proxy_port is not defined


- name: Ensure TEST
  shell: uptime
  become: yes
  tags: [exporters]

- name: Ensure group {{pushprox_group}} existance
  group: name={{pushprox_group}} state=present
  become: yes
  tags: [exporters]


- name: Add user {{pushprox_user}}
  user: name={{pushprox_user}} group={{pushprox_group}} comment="{{pushprox_description}}" shell=/sbin/nologin home={{pushprox_home}}
  become: yes
  ignore_errors: yes
  tags: [exporters]

- name: Ensure folder {{role_path}}/files/ exists
  local_action: file path="{{role_path}}/files" state=directory
  become: no
  tags: [pushprox]

- name: Check if pushprox is already on {{role_path}}/files/PushProx-{{pushprox_version}}.linux-amd64.tar.gz
  local_action: stat path={{role_path}}/files/PushProx-{{pushprox_version}}.linux-amd64.tar.gz
  become: no
  register: pushprox_client_file
  tags: [pushprox]

- name: Download pushprox v{{pushprox_version}}
  local_action: get_url url={{pushprox_url}} dest={{role_path}}/files/ timeout=100
  run_once: yes
  become: no
  when: not pushprox_client_file.stat.exists
  register: pushprox_downloaded
  tags: [pushprox]

- name: Create temp folder
  shell: mktemp -p /dev/shm -t pushprox.XXX -d
  become: yes
  register: tmpdir
  tags: [pushprox]

- name: Unpack pushprox-v{{pushprox_version}} to {{tmpdir.stdout}}
  unarchive: copy=yes src=PushProx-{{pushprox_version}}.linux-amd64.tar.gz dest={{tmpdir.stdout}}
  become: yes
  register: pushprox_unpack
  tags: [pushprox]

- name: Copy {{tmpdir.stdout}}/PushProx-{{pushprox_version}}.linux-amd64/pushprox-client to {{pushprox_installdir}}
  copy: remote_src=yes src={{tmpdir.stdout}}/PushProx-{{pushprox_version}}.linux-amd64/pushprox-client dest={{pushprox_installdir}} mode=0755
  become: yes
  tags: [pushprox]

- name: Remove temp folder
  file: path="{{tmpdir.stdout}}" state=absent
  become: yes
  tags: [pushprox]

- name: Create {{pushprox_servicename}} systemd's unit
  template:
     src=pushprox-client.service.j2
     dest=/etc/systemd/system/{{pushprox_servicename}}.service
     owner=root group=root mode=644
  become: yes
  tags: [pushprox]

- name: Update systemd's configuration
  shell: systemctl daemon-reload
  become: yes
  tags: [exporters]

- name: Enable and start {{pushprox_servicename}}
  service: name={{pushprox_servicename}} state=restarted enabled=yes
  become: yes
  tags: [exporters,restart]
