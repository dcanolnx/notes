---
- hosts: localhost
  vars:
    vcenter_hostname: "vcenter.int.stratio.com"
    vcenter_username: "administrator@vsphere.local"
    vcenter_password: 
    datacenter:       "Stratio.com"
    cluster:          "ClusterA"
    parent_folder:    "Pool"
    env_name:         
    kerberos:         true
    hdfs:             true
    master:            
    master_CPUs:      4
    master_RAM:       16
    nodes:            
    nodes_CPUs:       10
    nodes_RAM:        32
    OS:               CentOS8        
    pause_seconds:    30
    template:         "centos8stream"
    storage:          "local-path"

  tasks:
    - name: Create {{ env_name }} folder 
      vcenter_folder:
        hostname:        "{{ vcenter_hostname }}"
        username:        "{{ vcenter_username }}"
        password:        "{{ vcenter_password }}"
        datacenter_name: "{{ datacenter }}"
        validate_certs: no
        parent_folder:   "{{ parent_folder }}"
        folder_name:     "{{ env_name }}"
        folder_type:     vm
        state:           present
      delegate_to: localhost

## KERBEROS
    - name: Create Kerberos from template on specific ESXi
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        esxi_hostname:  "{{ esxi }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-kerberos"
        state:          present
        template:       template-ldapkerberos
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - kerberos
        - esxi is defined

    - name: Create Kerberos from template
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-kerberos"
        state:          present
        template:       template-ldapkerberos
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - kerberos
        - esxi is not defined
    
    - name: Config Kerberos Network
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-kerberos"
        state:          present
        template:       template-ldapkerberos
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - kerberos

### HDFS
    - name: Create HDFS from template on specific ESXi
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        esxi_hostname:  "{{ esxi }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-hdfs"
        state:          present
        template:       "template-{{template}}-hdfs"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - hdfs
        - esxi is defined

    - name: Create HDFS from template
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-hdfs"
        state:          present
        template:       "template-{{template}}-hdfs"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - hdfs
        - esxi is not defined

    - name: Config HDFS Network
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-hdfs"
        state:          present
        template:       "template-{{template}}-hdfs"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
      delegate_to:      localhost
      when:
        - hdfs

### MASTERS
    - name: Create Masters from template on specific ESXi
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        esxi_hostname:  "{{ esxi }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-master{{ item }}"
        state:          present
        template:       "template-{{template}}-master_k8s"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ master_RAM * 1024 }}"
          num_cpus:     "{{ master_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ masters }} format="%02d"
      when: 
        - masters > 0
        - esxi is defined

    - name: Create Masters from template
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-master{{ item }}"
        state:          present
        template:       "template-{{template}}-master_k8s"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ master_RAM * 1024 }}"
          num_cpus:     "{{ master_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ masters }} format="%02d"
      when: 
        - masters > 0
        - esxi is not defined

    - name: Config Masters Network
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-master{{ item }}"
        state:          present
        template:       "template-{{template}}-master_k8s"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ masters }} format="%02d"
      when: 
        - masters > 0

### NODES
    - name: Create Nodes from template on specific ESXi
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        esxi_hostname:  "{{ esxi }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-node{{ item }}"
        state:          present
        template:       "template-{{template}}-node_k8s_localstorage"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ nodes_RAM * 1024 }}"
          num_cpus:     "{{ nodes_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ nodes }} format="%02d"
      when: 
        - nodes > 0
        - esxi is defined
        - storage == "local-path"
  
    - name: Create Nodes from template on specific ESXi
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        esxi_hostname:  "{{ esxi }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-node{{ item }}"
        state:          present
        template:       "template-{{template}}-node_k8s_cephstorage"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ nodes_RAM * 1024 }}"
          num_cpus:     "{{ nodes_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ nodes }} format="%02d"
      when: 
        - nodes > 0
        - esxi is defined
        - storage == "ceph"

    - name: Create Nodes from template
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-node{{ item }}"
        state:          present
        template:       "template-{{template}}-node_k8s_localstorage"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ nodes_RAM * 1024 }}"
          num_cpus:     "{{ nodes_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ nodes }} format="%02d"
      when: 
        - nodes > 0
        - esxi is not defined
        - storage == "local-path"

    - name: Create Nodes from template
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-node{{ item }}"
        state:          present
        template:       "template-{{template}}-node_k8s_cephstorage"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
        hardware:
          memory_mb:    "{{ nodes_RAM * 1024 }}"
          num_cpus:     "{{ nodes_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ nodes }} format="%02d"
      when: 
        - nodes > 0
        - esxi is not defined
        - storage == "ceph"

    - name: Config Nodes Network
      vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-node{{ item }}"
        state:          present
        template:       "template-{{template}}-node_k8s_localstorage"
        #datastore:      "{{ env_name | lower }}"
        datastore:      "vvol_labs"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected: yes
          connected: yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ nodes }} format="%02d"
      when: 
        - nodes > 0

### OTHER TASKS
    - name: Get vms from /{{ datacenter }}/vm/{{ parent_folder }}/{{ env_name }}
      vmware_vm_info:
        hostname:         "{{ vcenter_hostname }}"
        username:         "{{ vcenter_username }}"
        password:         "{{ vcenter_password }}"
        folder:           "/{{ datacenter }}/vm/{{ parent_folder }}/{{ env_name }}"
        validate_certs:   no
      delegate_to: localhost
      register: vcenter_folder_info

    - name: Power on all Env Machines 
      vmware_guest:
        hostname:         "{{ vcenter_hostname }}"
        username:         "{{ vcenter_username }}"
        password:         "{{ vcenter_password }}"
        validate_certs:   no
        uuid:             "{{ item.uuid }}"
        state:            poweredon
      delegate_to: localhost
      with_items: "{{ vcenter_folder_info.virtual_machines }}"

    - name: Stop {{ pause_seconds }} seconds until the start of VMs
      pause:
        seconds: "{{ pause_seconds }}"
