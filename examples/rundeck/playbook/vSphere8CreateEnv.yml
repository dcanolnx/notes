---
- hosts: localhost
  vars:
    vcenter_hostname: "vcenter.int.stratio.com"
    vcenter_username: "administrator@vsphere.local"
    vcenter_password: 
    datacenter:       "Stratio.com"
    cluster:          "ClusterA"
    parent_folder:    "Pool"
    env_name:      
    bootstrap_RAM:    4
    bootstrap_CPUs:   2   
    masters:          
    master_RAM:       16
    master_CPUs:      4
    gosecs:           
    gosec_RAM:        8
    gosec_CPUs:       2
    publics:     
    public_RAM:       8
    public_CPUs:      4     
    privatestateless: 
    privatestateful:  0
    private_RAM:      32
    private_CPUs:     10
    pause_seconds:    30
    template:         "almalinux"
  
  tasks:
    - name: Create {{ env_name }} folder 
      vcenter_folder:
        hostname:        "{{ vcenter_hostname }}"
        username:        "{{ vcenter_username }}"
        password:        "{{ vcenter_password }}"
        datacenter_name: "{{ datacenter }}"
        validate_certs: no
        parent_folder:   "/{{ parent_folder }}"
        folder_name:     "{{ env_name }}"
        folder_type:     vm
        state:           present
      delegate_to: localhost

    - name: Create Bootstrap from a template
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-bootstrap"
        state:          present
        template:       template-{{template}}-bootstrap
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
        hardware:
          memory_mb:    "{{ bootstrap_RAM * 1024 }}"
          num_cpus:     "{{ bootstrap_CPUs }}"
      delegate_to:      localhost
    
    - name: Configure Bootstrap network
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-bootstrap"
        state:          present
        template:       template-{{template}}-bootstrap
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
  
    - name: Create Masters from a template
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-master{{ item }}"
        state:          present
        template:       template-{{template}}-master
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
        hardware:
          memory_mb:    "{{ master_RAM * 1024 }}"
          num_cpus:     "{{ master_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ masters }} format="%02d"
      when: 
        - masters > 0
    
    - name: Configure Masters network
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-master{{ item }}"
        state:          present
        template:       template-{{template}}-master
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ masters }} format="%02d"
      when: 
        - masters > 0

    - name: Create Gosecs from a template
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-gosec{{ item }}"
        state:          present
        template:       template-{{template}}-gosec
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
        hardware:
          memory_mb:    "{{ gosec_RAM * 1024 }}"
          num_cpus:     "{{ gosec_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ gosecs }} format="%02d"
      when: 
        - gosecs > 0

    - name: Configure Gosecs Network
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-gosec{{ item }}"
        state:          present
        template:       template-{{template}}-gosec
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ gosecs }} format="%02d"
      when: 
        - gosecs > 0

    - name: Create Publics from a template
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-public{{ item }}"
        state:          present
        template:       template-{{template}}-public
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
        hardware:
          memory_mb:    "{{ public_RAM * 1024 }}"
          num_cpus:     "{{ public_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ publics }} format="%02d"
      when: 
        - publics > 0

    - name: Config Publics Network
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-public{{ item }}"
        state:          present
        template:       template-{{template}}-public
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ publics }} format="%02d"
      when: 
        - publics > 0

    - name: Create Privatestateless from a template
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-private{{ item }}"
        state:          present
        template:       template-{{template}}-privatestateless
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
        hardware:
          memory_mb:    "{{ private_RAM * 1024 }}"
          num_cpus:     "{{ private_CPUs }}"
      delegate_to:      localhost
      with_sequence: start=1 end={{ privatestateless }} format="%02d"
      when: 
        - privatestateless > 0

    - name: Config Privatestateless Network
      community.vmware.vmware_guest:
        hostname:       "{{ vcenter_hostname }}"
        username:       "{{ vcenter_username }}"
        password:       "{{ vcenter_password }}"
        datacenter:     "{{ datacenter }}"
        validate_certs: no
        cluster:        "{{ cluster }}"
        folder:         "/{{ parent_folder }}/{{ env_name }}"
        name:           "{{ env_name }}-private{{ item }}"
        state:          present
        template:       template-{{template}}-privatestateless
        datastore:      "{{ env_name | lower }}"
        networks:
        - name:         "Labs_{{ env_name }}"
          start_connected:  yes
      delegate_to:      localhost
      with_sequence: start=1 end={{ privatestateless }} format="%02d"
      when: 
        - privatestateless > 0

    # - name: Create Privatestateful from a template
    #   community.vmware.vmware_guest:
    #     hostname:       "{{ vcenter_hostname }}"
    #     username:       "{{ vcenter_username }}"
    #     password:       "{{ vcenter_password }}"
    #     datacenter:     "{{ datacenter }}"
    #     validate_certs: no
    #     cluster:        "{{ cluster }}"
    #     folder:         "/{{ parent_folder }}/{{ env_name }}"
    #     name:           "{{ env_name }}-private{{ item }}"
    #     state:          present
    #     template:       template-{{template}}-privatestateful
    #     datastore:      "{{ env_name | lower }}"
    #     networks:
    #     - name:         "Labs_{{ env_name }}"
    #       start_connected:  yes
    #     hardware:
    #       memory_mb:    "{{ private_RAM * 1024 }}"
    #       num_cpus:     "{{ private_CPUs }}"
    #   delegate_to:      localhost
    #   with_sequence: start=1+{{ privatestateless }} end={{ privatestateless }}+{{ privatestateful }} format="%02d"
    #   when: 
    #     - privatestateful > 0

    # - name: Config privatestateful Network
    #   community.vmware.vmware_guest:
    #     hostname:       "{{ vcenter_hostname }}"
    #     username:       "{{ vcenter_username }}"
    #     password:       "{{ vcenter_password }}"
    #     datacenter:     "{{ datacenter }}"
    #     validate_certs: no
    #     cluster:        "{{ cluster }}"
    #     folder:         "/{{ parent_folder }}/{{ env_name }}"
    #     name:           "{{ env_name }}-private{{ item }}"
    #     state:          present
    #     template:       template-{{template}}-privatestateful
    #     datastore:      "{{ env_name | lower }}"
    #     networks:
    #     - name:         "Labs_{{ env_name }}"
    #       start_connected:  yes
    #   delegate_to:      localhost
    #   with_sequence: start=1+{{ privatestateless }} end={{ privatestateless }}+{{ privatestateful }} format="%02d"
    #   when: 
    #     - privatestateful > 0

    - name: Get vms from /{{ datacenter }}/vm/{{ parent_folder }}/{{ env_name }}
      vmware_vm_info:
        hostname:         "{{ vcenter_hostname }}"
        username:         "{{ vcenter_username }}"
        password:         "{{ vcenter_password }}"
        folder:           "/{{ datacenter }}/vm/{{ parent_folder }}/{{ env_name }}"
        validate_certs:   no
      delegate_to: localhost
      register: vcenter_folder_info

    - name: Power on all Env Machines 
      vmware_guest:
        hostname:         "{{ vcenter_hostname }}"
        username:         "{{ vcenter_username }}"
        password:         "{{ vcenter_password }}"
        validate_certs:   no
        uuid:             "{{ item.uuid }}"
        state:            poweredon
      delegate_to: localhost
      with_items: "{{ vcenter_folder_info.virtual_machines }}"

    - name: Stop {{ pause_seconds }} seconds until the start of VMs
      pause:
        seconds: "{{ pause_seconds }}"
