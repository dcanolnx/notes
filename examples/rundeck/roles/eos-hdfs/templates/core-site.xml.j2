<configuration>
  <property>
    <name>hadoop.tmp.dir</name>
    <value>{{dfs_tmp_dir}}</value>
  </property>
{% if hdfs_ha %}
  <property>
    <name>fs.defaultFS</name>
    <value>hdfs://{{hdfs_cluster_name}}:{{ namenode_listening_port }}</value>
  </property>
  <property>
      <name>ha.zookeeper.quorum</name>
      <value>{{  hostvars[hdfs_hostgroup[0]]['ansible_hostname'] }}:{{ zookeeper_clientport }},{{ hostvars[hdfs_hostgroup[1]]['ansible_hostname'] }}:{{ zookeeper_clientport }},{{ hostvars[hdfs_hostgroup[2]]['ansible_hostname'] }}:{{ zookeeper_clientport }}</value>
  </property>
{% else %}
  <property>
    <name>fs.defaultFS</name>
{% for host in hdfs_hostgroup %}
{% if loop.first %}
    <value>hdfs://{{hostvars[host]['ansible_fqdn']}}:{{ namenode_listening_port }}</value>
  </property>
{% endif %}
{% endfor %}
{% endif %}
   <property>
   <name>dfs.namenode.rpc-bind-host</name>
    <value>{{ listening_address }}</value>
  </property>
  <property>
    <name>dfs.namenode.servicerpc-bind-host</name>
    <value>{{ listening_address }}</value>
  </property>
  <property>
    <name>dfs.namenode.http-bind-host</name>
    <value>{{ listening_address }}</value>
  </property>
  <property>
    <name>dfs.namenode.https-bind-host</name>
    <value>{{ listening_address }}</value>
  </property>
  <property>
    <name>hadoop.security.authorization</name>
    <value>{{ hadoop_security_authentication == "kerberos" }}</value>
  </property>
  <property>
    <name>hadoop.security.authentication</name>
    <value>{{ hadoop_security_authentication }}</value>
  </property>
      <property>
    <name>hadoop.http.authentication.type</name>
    <value>{{ hadoop_security_authentication }}</value>
  </property>
  <property>
    <name>hadoop.http.authentication.cookie.domain</name>
    <value>{{ http_cookie_domain }}</value>
  </property>
  <property>
    <name>hadoop.http.authentication.simple.anonymous.allowed</name>
    <value>false</value>
  </property>
{% if hadoop_security_authentication == "kerberos" %}
  <property>
    <name>hadoop.security.auth_to_local</name>
    <value>
      RULE:[1:$1@$0](.*@{{ kerberos_realm }})s/@{{ kerberos_realm }}//
      RULE:[2:$1@$0](.*@{{ kerberos_realm }})s/@{{ kerberos_realm }}//
      DEFAULT
    </value>
  </property>
  <property>
    <name>hadoop.http.filter.initializers</name>
    <value>org.apache.hadoop.security.AuthenticationFilterInitializer</value>
  </property>
  <property>
    <name>hadoop.http.authentication.kerberos.principal</name>
    <value>HTTP/_HOST@{{ kerberos_realm }}</value>
  </property>
  <property>
    <name>hadoop.http.authentication.kerberos.keytab</name>
    <value>{{ hadoop_secrets_dir }}/{{ kerberos_realm }}.keytab</value>
  </property>
  <property>
    <name>hadoop.http.authentication.signature.secret.file</name>
    <value>{{ hadoop_secrets_dir }}/{{ http_signature_secret_file }}</value>
  </property>
{% endif %}
</configuration>
