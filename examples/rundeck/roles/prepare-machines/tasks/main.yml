---
# tasks file for prepare-machines
- name: Set enforce permissive
  selinux:
    policy: targeted
    state: permissive

- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: Install EPEL Release
  package:
    name: epel-release
    state: present
  when: "'bootstrap' in group_names"

- name: Install lsof
  package:
    name: lsof
    state: present
  
- name: Install jq
  package:
    name: jq
    state: latest
  when: "'bootstrap' in group_names"

- name: Install docker
  package:
    name: docker
    state: latest
  when: "'bootstrap' in group_names"
 
- name: Update all packages
  package:
    name: '*'
    state: latest

- name: Create group operador
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - operador
    - docker

- name: create user operador
  user:
    name: operador
    comment: "User operador"
    createhome: yes
    state: present
    group: operador
    groups: docker

- name: Allow 'operador' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%operador'
    line: '%operador ALL=(ALL) NOPASSWD: ALL'

- name: Generate operador SSH keys
  local_action: shell echo y | ssh-keygen -b 4096 -t rsa -f {{role_path}}/files/operador.pem -q -N '' -C operador 2> /dev/null
  become: no
  run_once: yes

- name: Read SSH private key
  local_action: shell cat {{role_path}}/files/operador.pem
  become: no
  run_once: yes
  register: private_key
  when: "'bootstrap' not in group_names"

- name: Read SSH public key
  local_action: shell cat {{role_path}}/files/operador.pem.pub
  become: no
  run_once: yes
  register: public_key
  when: "'bootstrap' not in group_names"

- name: Set operador.pem.pub authorized key
  authorized_key:
    user: operador
    state: present
    key: "{{ lookup('file', '{{role_path}}/files/operador.pem.pub') }}"

- name: Copy operador.pem to id_rsa
  copy:
    src: "{{role_path}}/files/operador.pem"
    dest: /home/operador/.ssh/id_rsa
    mode: 0600
    owner: operador

- name: Print operador private key
  debug: msg="{{private_key.stdout_lines}}"
  become: no
  run_once: yes
  when: "'bootstrap' not in group_names"

- name: Print operador public key
  debug: msg="{{public_key.stdout_lines}}"
  become: no
  run_once: yes
  when: "'bootstrap' not in group_names"

- name: ACHTUNG! Copy SSH private/public keys before you lose them
  debug:
    msg:
      - "SSH Private key > {{role_path}}/files/operador.pem"
      - "SSH Public key > {{role_path}}/files/operador.pem.pub"
  become: no
  run_once: yes
  when: "'bootstrap' not in group_names"

- name: Copy SSH private/public keys to bootstrap
  copy:
    src: "{{role_path}}/files/operador.pem"
    dest: /stratio_volume/key.pem
    mode: 0600
    owner: root
  when: "'bootstrap' in group_names"
